/* ###################################################################
**     This component module is generated by Processor Expert. Do not modify it.
**     Filename    : AC1.h
**     Project     : USI-0106
**     Processor   : MKL04Z32VFK4
**     Component   : AnalogComp_LDD
**     Version     : Component 01.023, Driver 01.09, CPU db: 3.00.000
**     Compiler    : GNU C Compiler
**     Date/Time   : 2016-01-19, 16:49, # CodeGen: 1
**     Abstract    :
**         This component "AnalogComp_LDD" encapsulates Analog Comparator
**         peripheral supported on Freescale CPUs.
**         This component allows to select inputs to compare,
**         get the value of the comparator and specify when to generate
**         the compare event. If available for selected CPU, component
**         supports filtering and windowing functions.


**     Settings    :
**          Component name                                 : AC1
**          Analog comparator                              : CMP0
**          Interrupt service/event                        : Enabled
**            Interrupt                                    : INT_CMP0
**            Interrupt priority                           : medium priority
**          Positive inputs                                : 1
**            Positive input 0                             : 
**              Pin                                        : ADC0_SE0/CMP0_IN0/PTA12/IRQ_17/LPTMR0_ALT2/TPM1_CH0/TPM_CLKIN0
**              Signal                                     : TCdataIn
**              Source component                           : external
**          Negative inputs                                : 1
**            Negative input 0                             : 
**              Pin                                        : DAC6b0_Output
**              Signal                                     : 
**              Source component                           : internal
**                Component                                : DA1
**          Comparator output                              : Enabled
**            Pin                                          : PTA2/CMP0_OUT/SWD_DIO
**            Signal                                       : 
**            Filter bypass                                : Disabled
**          Output filter                                  : Disabled
**          Inverted output                                : no
**          Analog comp. mode                              : rising edge
**          Power mode                                     : Power saving
**          Pass through mode                              : Disabled
**          Hysteresis                                     : 3
**          DMA                                            : Disabled
**          Initialization                                 : 
**            Enabled in init. code                        : yes
**            Auto initialization                          : no
**            Positive input                               : Positive input 0
**            Negative input                               : Negative input 0
**            Event mask                                   : 
**              OnCompare                                  : Enabled
**          CPU clock/configuration selection              : 
**            Clock configuration 0                        : This component enabled
**            Clock configuration 1                        : This component disabled
**            Clock configuration 2                        : This component disabled
**            Clock configuration 3                        : This component disabled
**            Clock configuration 4                        : This component disabled
**            Clock configuration 5                        : This component disabled
**            Clock configuration 6                        : This component disabled
**            Clock configuration 7                        : This component disabled
**     Contents    :
**         Init - LDD_TDeviceData* AC1_Init(LDD_TUserData *UserDataPtr);
**
**     Copyright : 1997 - 2014 Freescale Semiconductor, Inc. 
**     All Rights Reserved.
**     
**     Redistribution and use in source and binary forms, with or without modification,
**     are permitted provided that the following conditions are met:
**     
**     o Redistributions of source code must retain the above copyright notice, this list
**       of conditions and the following disclaimer.
**     
**     o Redistributions in binary form must reproduce the above copyright notice, this
**       list of conditions and the following disclaimer in the documentation and/or
**       other materials provided with the distribution.
**     
**     o Neither the name of Freescale Semiconductor, Inc. nor the names of its
**       contributors may be used to endorse or promote products derived from this
**       software without specific prior written permission.
**     
**     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
**     ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
**     WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
**     DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
**     ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
**     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
**     LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
**     ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
**     (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
**     SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
**     
**     http: www.freescale.com
**     mail: support@freescale.com
** ###################################################################*/
/*!
** @file AC1.h
** @version 01.09
** @brief
**         This component "AnalogComp_LDD" encapsulates Analog Comparator
**         peripheral supported on Freescale CPUs.
**         This component allows to select inputs to compare,
**         get the value of the comparator and specify when to generate
**         the compare event. If available for selected CPU, component
**         supports filtering and windowing functions.


*/         
/*!
**  @addtogroup AC1_module AC1 module documentation
**  @{
*/         

#ifndef __AC1_H
#define __AC1_H

/* MODULE AC1. */

/* Include shared modules, which are used for whole project */
#include "PE_Types.h"
#include "PE_Error.h"
#include "PE_Const.h"
#include "IO_Map.h"
/* Include inherited beans */
#include "DA1.h"

#include "Cpu.h"
#include "CMP_PDD.h"

#ifdef __cplusplus
extern "C" {
#endif 

/*! Peripheral base address of a device allocated by the component. This constant can be used directly in PDD macros. */
#define AC1_PRPH_BASE_ADDRESS  0x40073000U
  
/*  This constant contains mask of all events generated by Processor Expert */
#define AC1_AVAILABLE_EVENTS_MASK (LDD_ANALOGCOMP_ON_COMPARE)
/* This constant contains number of available positive inputs */
#define AC1_AVAILABLE_POS_INPUTS_NUMBER 0x01U
/*  This constant contains mask of all available positive inputs */
#define AC1_AVAILABLE_POS_INPUTS_MASK (LDD_ANALOGCOMP_POSITIVE_INPUT_0_MASK)
/* This constant contains number of available negative inputs */
#define AC1_AVAILABLE_NEG_INPUTS_NUMBER 0x01U
/*  This constant contains mask of all available negative inputs */
#define AC1_AVAILABLE_NEG_INPUTS_MASK (LDD_ANALOGCOMP_NEGATIVE_INPUT_7_MASK)


typedef struct {
  LDD_TEventMask EventMask;            /* Mask of enabled events */
  LDD_TUserData *UserDataPtr;          /* RTOS device data structure */
} AC1_TDeviceData;                     /* Device data structure type */

/*
** ===================================================================
**     Method      :  AC1_Init (component AnalogComp_LDD)
*/
/*!
**     @brief
**         Initializes the device according to design-time
**         configuration properties. Allocates memory for the device
**         data structure.
**         If the <Enable in init. code> is set to "yes" then the
**         device is also enabled and some time is required before
**         stabilizing of the comparator output. If the <Interrupt
**         service/event> property is enabled, it is recommended to
**         enable events after comparator output stabilizes to prevent
**         an unwanted event invocation before output stabilization.
**     @param
**         UserDataPtr     - Pointer to the user or
**                           RTOS specific data. This pointer will be
**                           passed as an events or callback parameter.
**     @return
**                         - Device data structure pointer.
*/
/* ===================================================================*/
LDD_TDeviceData* AC1_Init(LDD_TUserData *UserDataPtr);

/*
** ===================================================================
**     Method      :  AC1_Interrupt (component AnalogComp_LDD)
**
**     Description :
**         The method services the interrupt of the selected peripheral(s)
**         and eventually invokes event(s) of the component.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
/* {Default RTOS Adapter} ISR function prototype */
PE_ISR(AC1_Interrupt);

/* END AC1. */

#ifdef __cplusplus
}  /* extern "C" */
#endif 

#endif
/* ifndef __AC1_H */
/*!
** @}
*/
/*
** ###################################################################
**
**     This file was created by Processor Expert 10.3 [05.09]
**     for the Freescale Kinetis series of microcontrollers.
**
** ###################################################################
*/
